{"version":3,"sources":["app.js","environment.js","main.js","home/home.js","services/search-api.js","resources/index.js","simple/simple.js","simple/search-api.js","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/app.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Home","searchResults","brewery","type","SearchApi","search","query","resolve","Simple","api","results","queryText","console","log","inject"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA;;;;;sBACTC,2CAAgBC,QAAQC,QAAQ;AAC5B,iBAAKA,MAAL,GAAcA,MAAd;AACAD,mBAAOE,KAAP,GAAe,mBAAf;AACAF,mBAAOG,GAAP,CAAW,CACP,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuBC,MAAM,MAA7B,EAAqCC,UAAU,WAA/C,EADO,EAEP,EAAEF,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,eAA7C,EAA8DC,KAAK,IAAnE,EAFO,CAAX;AAIH;;;;;;;;;;;oBCRU;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQX,MAAR,CAAe;AACbY,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;MCxBYC,eAAAA;;;;;;;;;;;;;;;;;ACAb,QAAIC,gBAAgB,CAChB;AACInB,cAAM,UADV;AAEIoB,iBAAS,SAFb;AAGIC,cAAM;AAHV,KADgB,EAMhB;AACIrB,cAAM,UADV;AAEIoB,iBAAS,SAFb;AAGIC,cAAM;AAHV,KANgB,EAWhB;AACIrB,cAAM,eADV;AAEIoB,iBAAS,SAFb;AAGIC,cAAM;AAHV,KAXgB,CAApB;;QAkBaC,oBAAAA;;;;;4BAOTC,yBAAOC,OAAO;AACV,mBAAO,IAAIlB,OAAJ,CAAY,mBAAW;AAC1BmB,wBAAQN,aAAR;AACH,aAFM,CAAP;AAGH;;;;;;;;;;;UC7BWd,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCAY+B,iBAAAA;AAGT,wBAAYC,GAAZ,EAAiB;AAAA;;AACb,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACH;;yBAEDN,2BAAS;AAAA;;AACLO,oBAAQC,GAAR,CAAY,KAAKF,SAAjB;AACA,iBAAKF,GAAL,CAASJ,MAAT,CAAgB,KAAKM,SAArB,EAAgCb,IAAhC,CAAqC;AAAA,uBAAW,MAAKY,OAAL,GAAeA,OAA1B;AAAA,aAArC;AACH;;;gBAXMI,SAAS;;;;;;;;;;;;;;;QCiBPV,oBAAAA;;;;ACpBb;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        this.router = router;\n        config.title = 'Azure Search Demo';\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'home/home' },\n            { route: 'simple', name: 'simple', moduleId: 'simple/simple', nav: true }\n        ]);\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Home {\n\n}","let searchResults = [\n    {\n        name: 'Nissefar',\n        brewery: 'Nøgne Ø',\n        type: 'Porter'\n    },\n    {\n        name: 'Bestefar',\n        brewery: 'Nøgne Ø',\n        type: 'Porter'\n    },\n    {\n        name: 'Tiger Trippel',\n        brewery: 'Nøgne Ø',\n        type: 'Tripel Ale'\n    }\n];\n\nexport class SearchApi {\n    // search(query) {\n    //     return new Promise(resolve => {\n    //         resolve(searchResults);\n    //     });\n    // }\n\n    search(query) {\n        return new Promise(resolve => {\n            resolve(searchResults)\n        });\n    }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { SearchApi } from 'services/search-api';\n\nexport class Simple {\n    static inject = [SearchApi];\n\n    constructor(api) {\n        this.api = api;\n        this.results = [];\n        this.queryText = '';\n    }\n\n    search() {\n        console.log(this.queryText);\n        this.api.search(this.queryText).then(results => this.results = results);\n    }\n}","// let searchResults = [{\n//         id: getId(),\n//         name: 'Nissefar',\n//         brewery: 'Nøgne Ø',\n//         type: 'Porter'\n//     },\n//     {\n//         id: getId(),\n//         name: 'Bestefar',\n//         brewery: 'Nøgne Ø',\n//         type: 'Porter'\n//     },\n//     {\n//         id: getId(),\n//         name: 'Tiger Trippel',\n//         brewery: 'Nøgne Ø',\n//         type: 'Tripel Ale'\n//     }\n// ];\n\nexport class SearchApi {\n    // search(query) {\n    //     return new Promise(resolve => {\n    //         resolve(searchResults);\n    //     });\n    // }\n}",null,null,null,null],"sourceRoot":"../src"}