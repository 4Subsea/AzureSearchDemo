{"version":3,"sources":["app.js","environment.js","main.js","home/home.js","resources/index.js","services/search-api.js","simple/simple.js","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/app.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Home","SearchApi","httpClient","x","withBaseUrl","withHeader","search","query","post","jsonResult","JSON","parse","result","response","resolve","count","results","style","brewery","breweries","raw","suggest","Simple","api","queryText","rawResult","rawJson","stringify","clear","attached","_class","$","autocomplete","source","request","term","minLength","select","event","ui","item","value","inject"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        this.router = router;\n        config.title = 'Azure Search Demo';\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'home/home', title: 'Home' },\n            { route: 'simple', name: 'simple', moduleId: 'simple/simple', title: 'Simple', nav: true }\n        ]);\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Home {\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { HttpClient } from 'aurelia-http-client';\n\nexport class SearchApi {\n\n    constructor() {\n        this.httpClient = new HttpClient()\n            .configure(x => {\n                x.withBaseUrl('https://azuresearchfree.search.windows.net/indexes/beersv1/docs/search?api-version=2015-02-28')\n                x.withHeader('api-key', '5655AB55C4E55DBE67C691F376482D8C');\n            })\n    }\n\n    search(query) {\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"\", {\n                    \"count\": true,\n                    \"search\": query\n                })\n                .then(result => {\n                    let jsonResult = JSON.parse(result.response);\n                    resolve({\n                        count: jsonResult[\"@odata.count\"],\n                        results: jsonResult[\"value\"].map(x => {\n                            return {\n                                name: x.name,\n                                style: x.style,\n                                brewery: x.breweries[0]\n                            }\n                        }),\n                        raw: jsonResult\n                    });\n                });\n        });\n    }\n\n    suggest(query) {\n        return new Promise(resolve => {\n            resolve(['nissefar', 'bestefar', 'oldefar'])\n        })\n    }\n}","import { SearchApi } from 'services/search-api';\n\nexport class Simple {\n    static inject = [SearchApi];\n\n    constructor(api) {\n        this.api = api;\n        this.results = [];\n        this.queryText = '';\n        this.rawResult = '';\n        this.count = null;\n        this.rawJson = '';\n    }\n\n    search() {\n        this.api\n            .search(this.queryText)\n            .then(x => {\n                this.count = x.count;\n                this.results = x.results;\n                this.rawResult = JSON.stringify(x.raw, null, 4);\n            });\n\n    }\n\n    clear() {\n        this.results = [];\n        this.queryText = '';\n        this.rawResult = '';\n        this.count = null;\n    }\n\n    attached() {\n        let _class = this;\n        $(\".search-input\").autocomplete({\n            source: function(request, response) {\n                _class.api\n                    .suggest(request.term)\n                    .then(results => response(results));\n            },\n            minLength: 2,\n            select: function(event, ui) {\n                _class.queryText = ui.item.value;\n            }\n        })\n    }\n}",null,null,null,null],"sourceRoot":"../src"}