{"version":3,"sources":["app.js","environment.js","main.js","common/messages.js","common/multi-subscriber.js","common/request-interceptor.js","common/request-log.js","facets/facets.js","home/home.js","resources/index.js","services/search-api.js","simple/simple.js","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/site.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/app.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/common/request-log.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/common/request-log.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/facets/facets.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/facets/facets.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.css"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RequestSent","requestMessage","request","ResponseReceived","responseMessage","response","MultiCollectionSubscriber","bindingEngine","observers","subscriptions","observe","collection","forEach","observer","collectionObserver","x","push","onChanged","execute","subscribe","change","dispose","inject","RequestInterceptor","ea","message","console","log","publish","requestError","error","JSON","parse","responseError","RequestLog","stringify","msg","Facets","api","subscriber","query","results","count","facets","selectedBrewery","selectedStyle","selectedAbv","selectedCreated","search","filter","buildFilter","faceted","result","stylenameFilter","undefined","attached","detached","Home","SearchApi","interceptor","httpClient","withBaseUrl","withParams","withHeader","withInterceptor","post","jsonResult","resolve","description","label","labelmediumimage","style","stylename","brewery","breweries","suggest","suggesterName","highlightPreTag","highlightPostTag","value","jsonResponse","mapped","abv","created","Date","getFullYear","alcoholPercentage","Simple","queryText","rawResult","rawJson","raw","tired","_","$","autocomplete","source","term","minLength","select","event","ui","item","data","_renderItem","ul","replace","attr","append","appendTo"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA;;;;;sBACTC,2CAAgBC,QAAQC,QAAQ;AAC5B,iBAAKA,MAAL,GAAcA,MAAd;AACAD,mBAAOE,KAAP,GAAe,mBAAf;AACAF,mBAAOG,GAAP,CAAW,CACP,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuBC,MAAM,MAA7B,EAAqCC,UAAU,WAA/C,EAA4DJ,OAAO,MAAnE,EADO,EAEP,EAAEE,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,eAA7C,EAA8DJ,OAAO,QAArE,EAA+EK,KAAK,IAApF,EAFO,EAGP,EAAEH,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,eAA7C,EAA8DJ,OAAO,gBAArE,EAAuFK,KAAK,IAA5F,EAHO,CAAX;AAKH;;;;;;;;;;;oBCTU;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQX,MAAR,CAAe;AACbY,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;QCxBYC,sBAAAA,cACT,qBAAYC,cAAZ,EAA4B;AAAA;;AACxB,aAAKC,OAAL,GAAeD,cAAf;AACH;;QAGQE,2BAAAA,mBACT,0BAAYC,eAAZ,EAA6B;AAAA;;AACzB,aAAKC,QAAL,GAAgBD,eAAhB;AACH;;;;;;;;;;;;;;;;;;QCPQE,oCAAAA;AAGT,2CAAYC,aAAZ,EAA2B;AAAA;;AACvB,iBAAKA,aAAL,GAAqBA,aAArB;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACA,iBAAKC,aAAL,GAAqB,EAArB;AACH;;4CAEDC,2BAAQC,YAAY;AAAA;;AAChBA,uBAAWC,OAAX,CAAmB,aAAK;AACpB,oBAAIC,WAAW,MAAKN,aAAL,CAAmBO,kBAAnB,CAAsCC,CAAtC,CAAf;AACA,sBAAKP,SAAL,CAAeQ,IAAf,CAAoBH,QAApB;AACH,aAHD;;AAKA,mBAAO,IAAP;AACH;;4CAEDI,+BAAUC,SAAS;AAAA;;AACf,iBAAKV,SAAL,CACKI,OADL,CACa;AAAA,uBAAK,OAAKH,aAAL,CAAmBO,IAAnB,CAAwBD,EAAEI,SAAF,CAAY;AAAA,2BAAUD,QAAQE,MAAR,CAAV;AAAA,iBAAZ,CAAxB,CAAL;AAAA,aADb;AAEH;;4CAEDC,6BAAU;AACN,iBAAKZ,aAAL,CAAmBG,OAAnB,CAA2B;AAAA,uBAAKG,EAAEM,OAAF,EAAL;AAAA,aAA3B;AACA,iBAAKb,SAAL,GAAiB,EAAjB;AACH;;;gBAzBMc,SAAS;;;;;;;;;;;;;;;;;;QCAPC,6BAAAA;AAGT,oCAAYC,EAAZ,EAAgB;AAAA;;AACZ,iBAAKA,EAAL,GAAUA,EAAV;AACH;;qCAEDtB,2BAAQuB,SAAS;AACbC,oBAAQC,GAAR,CAAYF,OAAZ;AACA,iBAAKD,EAAL,CAAQI,OAAR,CAAgB,0BAAgBH,OAAhB,CAAhB;AACA,mBAAOA,OAAP;AACH;;qCAEDI,qCAAaC,OAAO;AAChBJ,oBAAQC,GAAR,CAAYG,KAAZ;AACA,kBAAMA,KAAN;AACH;;qCAEDzB,6BAASoB,SAAS;AACdC,oBAAQC,GAAR,CAAYF,OAAZ;AACA,iBAAKD,EAAL,CAAQI,OAAR,CAAgB,+BAAqBG,KAAKC,KAAL,CAAWP,QAAQpB,QAAnB,CAArB,CAAhB;AACA,mBAAOoB,OAAP;AACH;;qCAEDQ,uCAAcH,OAAO;AACjBJ,oBAAQC,GAAR,CAAYG,KAAZ;AACA,kBAAMA,KAAN;AACH;;;gBA1BMR,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDPY,qBAAAA;AAGT,4BAAYV,EAAZ,EAAgB;AAAA;;AAAA;;AACZ,iBAAKA,EAAL,GAAUA,EAAV;AACA,iBAAKtB,OAAL,GAAe,EAAf;AACA,iBAAKG,QAAL,GAAgB,EAAhB;;AAEAmB,eAAGL,SAAH,wBAA0B;AAAA,uBAAO,MAAKjB,OAAL,GAAe6B,KAAKI,SAAL,CAAeC,IAAIlC,OAAnB,EAA4B,IAA5B,EAAkC,CAAlC,CAAtB;AAAA,aAA1B;AACAsB,eAAGL,SAAH,6BAA+B;AAAA,uBAAO,MAAKd,QAAL,GAAgB0B,KAAKI,SAAL,CAAeC,IAAI/B,QAAnB,EAA6B,IAA7B,EAAmC,CAAnC,CAAvB;AAAA,aAA/B;AACH;;;;gCAEe;AACZ,uBAAO,KAAKH,OAAL,IAAgB,KAAKG,QAA5B;AACH;;;;gBAbMiB,SAAS;;;;;;;;;;;;;;;;;;QCAPe,iBAAAA;AAET,wBAAYC,GAAZ,EAAiBC,UAAjB,EAA6B;AAAA;;AAAA;;AACzB,iBAAKD,GAAL,GAAWA,GAAX;AACA,iBAAKC,UAAL,GAAkBA,UAAlB;;AAEA,iBAAKC,KAAL,GAAa,EAAb;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKC,MAAL,GAAc,IAAd;;AAEA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,aAAL,GAAqB,EAArB;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,eAAL,GAAuB,EAAvB;;AAEA,iBAAKR,UAAL,CACK7B,OADL,CACa,CAAC,KAAKkC,eAAN,EAAuB,KAAKC,aAA5B,EAA2C,KAAKC,WAAhD,EAA6D,KAAKC,eAAlE,CADb,EAEK9B,SAFL,CAEe;AAAA,uBAAU,MAAK+B,MAAL,EAAV;AAAA,aAFf;AAGH;;yBAGDA,2BAAS;AAAA;;AACL,gBAAIC,SAAS,KAAKC,WAAL,EAAb;;AAEA,iBAAKZ,GAAL,CACKa,OADL,CACa,KAAKX,KADlB,EACyBS,MADzB,EAEKnD,IAFL,CAEU,kBAAU;AACZ,uBAAK4C,KAAL,GAAaU,OAAOV,KAApB;AACA,uBAAKD,OAAL,GAAeW,OAAOX,OAAtB;AACA,uBAAKE,MAAL,GAAcS,OAAOT,MAArB;AACH,aANL;AAOH;;yBAEDO,qCAAc;;AAKV,gBAAIG,kBAAkB,KAAKR,aAAL,CAAmB,CAAnB,MAA0BS,SAA1B,GAAsC,EAAtC,GAA2C,mBAAmB,KAAKT,aAAL,CAAmB,CAAnB,CAAnB,GAA2C,GAA5G;AACAnB,oBAAQC,GAAR,CAAY0B,eAAZ;AACA,mBAAOA,eAAP;AACH;;yBAEDE,+BAAW;AACP,iBAAKP,MAAL;AACH;;yBAEDQ,+BAAW;AACP,iBAAKjB,UAAL,CAAgBlB,OAAhB;AACH;;;gBAjDMC,SAAS;;;;;;;;;;;;;;;MCLPmC,eAAAA;;;;;;;;;;UCAGtE,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCCYiF,oBAAAA;AAGT,2BAAYC,WAAZ,EAAyB;AAAA;;AACrB,iBAAKC,UAAL,GAAkB,oCACbzE,SADa,CACH,aAAK;AACZ4B,kBAAE8C,WAAF,CAAc,iEAAd;AACA9C,kBAAE+C,UAAF,CAAa,EAAE,eAAe,YAAjB,EAAb;AACA/C,kBAAEgD,UAAF,CAAa,SAAb,EAAwB,kCAAxB;AACAhD,kBAAEiD,eAAF,CAAkBL,WAAlB;AACH,aANa,CAAlB;AAOH;;4BAEDX,yBAAOR,OAAO;AAAA;;AACV,mBAAO,IAAIpD,OAAJ,CAAY,mBAAW;AAC1B,sBAAKwE,UAAL,CACKK,IADL,CACU,SADV,EACqB;AACbvB,2BAAO,IADM;AAEbM,4BAAQR;AAFK,iBADrB,EAKK1C,IALL,CAKU,kBAAU;AACZ,wBAAIoE,aAAanC,KAAKC,KAAL,CAAWoB,OAAO/C,QAAlB,CAAjB;AACA8D,4BAAQ;AACJzB,+BAAOwB,WAAW,cAAX,CADH;AAEJzB,iCAASyB,WAAW,OAAX,EAAoBtF,GAApB,CAAwB,aAAK;AAClC,mCAAO;AACHE,sCAAMiC,EAAEjC,IADL;AAEHsF,6CAAarD,EAAEqD,WAFZ;AAGHC,uCAAOtD,EAAEuD,gBAHN;AAIHC,uCAAOxD,EAAEyD,SAJN;AAKHC,yCAAS1D,EAAE2D,SAAF,CAAY,CAAZ;AALN,6BAAP;AAOH,yBARQ;AAFL,qBAAR;AAYH,iBAnBL;AAoBH,aArBM,CAAP;AAsBH;;4BAEDC,2BAAQnC,OAAO;AAAA;;AACX,mBAAO,IAAIpD,OAAJ,CAAY,mBAAW;AAC1B,uBAAKwE,UAAL,CACKK,IADL,CACU,UADV,EACsB;AACdjB,4BAAQR,KADM;AAEdoC,mCAAe,iBAFD;AAGdC,qCAAiB,UAHH;AAIdC,sCAAkB;AAJJ,iBADtB,EAOKhF,IAPL,CAOU,kBAAU;AACZ,wBAAI2C,UAAUV,KAAKC,KAAL,CAAWoB,OAAO/C,QAAlB,EAA4B0E,KAA1C;AACAZ,4BAAQ1B,QAAQ7D,GAAR,CAAY;AAAA,+BAAKmC,EAAE,cAAF,CAAL;AAAA,qBAAZ,CAAR;AACH,iBAVL;AAWH,aAZM,CAAP;AAaH;;4BAEDoC,2BAAQX,OAAOS,QAAQ;AAAA;;AACnB,mBAAO,IAAI7D,OAAJ,CAAY,mBAAW;AAC1B,uBAAKwE,UAAL,CACKK,IADL,CACU,SADV,EACqB;AACbtB,4BAAQ,CACJ,WADI,EAEJ,oBAFI,EAGJ,WAHI,EAIJ,uBAJI,CADK;AAObK,4BAAQR,KAPK;AAQbS,4BAAQA;AARK,iBADrB,EAWKnD,IAXL,CAWU,kBAAU;AACZ,wBAAIkF,eAAejD,KAAKC,KAAL,CAAWoB,OAAO/C,QAAlB,CAAnB;AACA,wBAAIsC,SAASqC,aAAa,gBAAb,CAAb;AACA,wBAAIC,SAAS;AACTtC,gCAAQ;AACJ6B,uCAAW7B,OAAO6B,SADd;AAEJU,iCAAKvC,OAAOuC,GAFR;AAGJR,uCAAW/B,OAAO+B,SAHd;AAIJS,qCAASxC,OAAOwC,OAAP,CAAevG,GAAf,CAAmB,aAAK;AAC7B,uCAAO;AACHmG,2CAAO,IAAIK,IAAJ,CAASrE,EAAEgE,KAAX,EAAkBM,WAAlB,EADJ;AAEH3C,2CAAO3B,EAAE2B;AAFN,iCAAP;AAIH,6BALQ;AAJL,yBADC;AAYTD,iCAASuC,aAAaD,KAAb,CAAmBnG,GAAnB,CAAuB,aAAK;AACjC,mCAAO;AACHE,sCAAMiC,EAAEjC,IADL;AAEHsF,6CAAarD,EAAEqD,WAFZ;AAGHkB,mDAAmBvE,EAAEmE,GAHlB;AAIHb,uCAAOtD,EAAEuD,gBAJN;AAKHC,uCAAOxD,EAAEyD,SALN;AAMHC,yCAAS1D,EAAE2D,SAAF,CAAY,CAAZ;AANN,6BAAP;AAQH,yBATQ;AAZA,qBAAb;;AAwBAP,4BAAQc,MAAR;AACH,iBAvCL;AAwCH,aAzCM,CAAP;AA0CH;;;gBAhGM3D,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCFPiE,iBAAAA;AAGT,wBAAYjD,GAAZ,EAAiB;AAAA;;AACb,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKG,OAAL,GAAe,EAAf;AACA,iBAAK+C,SAAL,GAAiB,EAAjB;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACA,iBAAK/C,KAAL,GAAa,IAAb;AACA,iBAAKgD,OAAL,GAAe,EAAf;AACH;;yBAMD1C,2BAAS;AAAA;;AACL,iBAAKV,GAAL,CACKU,MADL,CACY,KAAKwC,SADjB,EAEK1F,IAFL,CAEU,aAAK;AACP,sBAAK4C,KAAL,GAAa3B,EAAE2B,KAAf;AACA,sBAAKD,OAAL,GAAe1B,EAAE0B,OAAjB;AACA,sBAAKgD,SAAL,GAAiB1D,KAAKI,SAAL,CAAepB,EAAE4E,GAAjB,EAAsB,IAAtB,EAA4B,CAA5B,CAAjB;AACH,aANL;AAOH;;yBAEDC,yBAAQ;AACJ,iBAAKJ,SAAL,GAAiB,eAAjB;AACA,iBAAKxC,MAAL;AACH;;yBAEDO,+BAAW;AACP,gBAAIsC,IAAI,IAAR;AACAC,cAAE,eAAF,EAAmBC,YAAnB,CAAgC;AACxBC,wBAAQ,gBAAS9F,OAAT,EAAkBG,QAAlB,EAA4B;AAChCwF,sBAAEvD,GAAF,CACKqC,OADL,CACazE,QAAQ+F,IADrB,EAEKnG,IAFL,CAEU;AAAA,+BAAWO,SAASoC,OAAT,CAAX;AAAA,qBAFV;AAGH,iBALuB;AAMxByD,2BAAW,CANa;AAOxBC,wBAAQ,gBAASC,KAAT,EAAgBC,EAAhB,EAAoB;AACxBR,sBAAEL,SAAF,GAAca,GAAGC,IAAH,CAAQvB,KAAtB;AACH;AATuB,aAAhC,EAWKwB,IAXL,CAWU,iBAXV,EAYKC,WAZL,GAYmB,UAASC,EAAT,EAAaH,IAAb,EAAmB;AAC9BA,qBAAKvB,KAAL,GAAauB,KAAKvB,KAAL,CAAW2B,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAb;;AAEA,uBAAOZ,EAAE,MAAF,EACFa,IADE,CACG,YADH,EACiBL,KAAKvB,KADtB,EAEF6B,MAFE,CAEKN,KAAKjC,KAFV,EAGFwC,QAHE,CAGOJ,EAHP,CAAP;AAIH,aAnBL;AAoBH;;;;gCAzCgB;AACb,uBAAO,KAAKhB,SAAZ;AACH;;;;gBAbMnE,SAAS;;ACHpB;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        this.router = router;\n        config.title = 'Azure Search Demo';\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'home/home', title: 'Home' },\n            { route: 'simple', name: 'simple', moduleId: 'simple/simple', title: 'Simple', nav: true },\n            { route: 'facets', name: 'facets', moduleId: 'facets/facets', title: 'Faceted Search', nav: true }\n        ]);\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class RequestSent {\n    constructor(requestMessage) {\n        this.request = requestMessage;\n    }\n}\n\nexport class ResponseReceived {\n    constructor(responseMessage) {\n        this.response = responseMessage;\n    }\n}","import { BindingEngine } from \"aurelia-binding\";\n\nexport class MultiCollectionSubscriber {\n    static inject = [BindingEngine];\n\n    constructor(bindingEngine) {\n        this.bindingEngine = bindingEngine;\n        this.observers = []\n        this.subscriptions = [];\n    }\n\n    observe(collection) {\n        collection.forEach(x => {\n            let observer = this.bindingEngine.collectionObserver(x);\n            this.observers.push(observer)\n        });\n\n        return this;\n    }\n\n    onChanged(execute) {\n        this.observers\n            .forEach(x => this.subscriptions.push(x.subscribe(change => execute(change))));\n    }\n\n    dispose() {\n        this.subscriptions.forEach(x => x.dispose());\n        this.observers = [];\n    }\n}","import { EventAggregator } from \"aurelia-event-aggregator\";\nimport { RequestSent, ResponseReceived } from \"./messages\";\n\nexport class RequestInterceptor {\n    static inject = [EventAggregator]\n\n    constructor(ea) {\n        this.ea = ea;\n    }\n\n    request(message) {\n        console.log(message);\n        this.ea.publish(new RequestSent(message));\n        return message;\n    }\n\n    requestError(error) {\n        console.log(error);\n        throw error;\n    }\n\n    response(message) {\n        console.log(message);\n        this.ea.publish(new ResponseReceived(JSON.parse(message.response)));\n        return message;\n    }\n\n    responseError(error) {\n        console.log(error);\n        throw error;\n    }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { RequestSent, ResponseReceived } from './messages';\n\nexport class RequestLog {\n    static inject = [EventAggregator];\n\n    constructor(ea) {\n        this.ea = ea;\n        this.request = '';\n        this.response = '';\n\n        ea.subscribe(RequestSent, msg => this.request = JSON.stringify(msg.request, null, 4));\n        ea.subscribe(ResponseReceived, msg => this.response = JSON.stringify(msg.response, null, 4));\n    }\n\n    get hasValues() {\n        return this.request || this.response;\n    }\n\n}","import { SearchApi } from \"services/search-api\";\nimport { MultiCollectionSubscriber } from \"common/multi-subscriber\";\n\n\nexport class Facets {\n    static inject = [SearchApi, MultiCollectionSubscriber];\n    constructor(api, subscriber) {\n        this.api = api;\n        this.subscriber = subscriber;\n\n        this.query = \"\";\n        this.results = [];\n        this.count = null;\n        this.facets = null;\n\n        this.selectedBrewery = [];\n        this.selectedStyle = [];\n        this.selectedAbv = [];\n        this.selectedCreated = [];\n\n        this.subscriber\n            .observe([this.selectedBrewery, this.selectedStyle, this.selectedAbv, this.selectedCreated])\n            .onChanged(change => this.search());\n    }\n\n\n    search() {\n        var filter = this.buildFilter();\n\n        this.api\n            .faceted(this.query, filter)\n            .then(result => {\n                this.count = result.count;\n                this.results = result.results;\n                this.facets = result.facets;\n            })\n    }\n\n    buildFilter() {\n        // var stylenameFilter = this.selectedStyle.reduce((aggregated, curr) => {\n        //     return aggregated += 'stylename eq ${expression}'\n        // })\n\n        var stylenameFilter = this.selectedStyle[0] === undefined ? \"\" : \"stylename eq '\" + this.selectedStyle[0] + \"'\";\n        console.log(stylenameFilter);\n        return stylenameFilter;\n    }\n\n    attached() {\n        this.search();\n    }\n\n    detached() {\n        this.subscriber.dispose();\n    }\n}","export class Home {\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { HttpClient } from \"aurelia-http-client\";\nimport { RequestInterceptor } from \"../common/request-interceptor\";\n\nexport class SearchApi {\n    static inject = [RequestInterceptor];\n\n    constructor(interceptor) {\n        this.httpClient = new HttpClient()\n            .configure(x => {\n                x.withBaseUrl(\"https://azuresearchfree.search.windows.net/indexes/beersv1/docs\")\n                x.withParams({ \"api-version\": \"2015-02-28\" });\n                x.withHeader(\"api-key\", \"5655AB55C4E55DBE67C691F376482D8C\");\n                x.withInterceptor(interceptor)\n            })\n    }\n\n    search(query) {\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/search\", {\n                    count: true,\n                    search: query\n                })\n                .then(result => {\n                    let jsonResult = JSON.parse(result.response);\n                    resolve({\n                        count: jsonResult[\"@odata.count\"],\n                        results: jsonResult[\"value\"].map(x => {\n                            return {\n                                name: x.name,\n                                description: x.description,\n                                label: x.labelmediumimage,\n                                style: x.stylename,\n                                brewery: x.breweries[0]\n                            }\n                        })\n                    });\n                });\n        });\n    }\n\n    suggest(query) {\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/suggest\", {\n                    search: query,\n                    suggesterName: \"suggestBeerName\",\n                    highlightPreTag: \"<strong>\",\n                    highlightPostTag: \"</strong>\"\n                })\n                .then(result => {\n                    var results = JSON.parse(result.response).value;\n                    resolve(results.map(x => x[\"@search.text\"]));\n                });\n        })\n    }\n\n    faceted(query, filter) {\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/search\", {\n                    facets: [\n                        \"stylename\",\n                        \"abv,values:5|10|15\",\n                        \"breweries\",\n                        \"created,interval:year\"\n                    ],\n                    search: query,\n                    filter: filter\n                })\n                .then(result => {\n                    var jsonResponse = JSON.parse(result.response);\n                    var facets = jsonResponse[\"@search.facets\"];\n                    var mapped = {\n                        facets: {\n                            stylename: facets.stylename,\n                            abv: facets.abv,\n                            breweries: facets.breweries,\n                            created: facets.created.map(x => {\n                                return {\n                                    value: new Date(x.value).getFullYear(),\n                                    count: x.count\n                                }\n                            }),\n                        },\n                        results: jsonResponse.value.map(x => {\n                            return {\n                                name: x.name,\n                                description: x.description,\n                                alcoholPercentage: x.abv,\n                                label: x.labelmediumimage,\n                                style: x.stylename,\n                                brewery: x.breweries[0]\n                            }\n                        })\n                    }\n\n                    resolve(mapped);\n                });\n        })\n    }\n}","import { SearchApi } from 'services/search-api';\n\nexport class Simple {\n    static inject = [SearchApi];\n\n    constructor(api) {\n        this.api = api;\n        this.results = [];\n        this.queryText = '';\n        this.rawResult = '';\n        this.count = null;\n        this.rawJson = '';\n    }\n\n    get hasResults() {\n        return this.rawResult;\n    }\n\n    search() {\n        this.api\n            .search(this.queryText)\n            .then(x => {\n                this.count = x.count;\n                this.results = x.results;\n                this.rawResult = JSON.stringify(x.raw, null, 4);\n            });\n    }\n\n    tired() {\n        this.queryText = \"\\\"real kick\\\"\";\n        this.search();\n    }\n\n    attached() {\n        let _ = this;\n        $(\".search-input\").autocomplete({\n                source: function(request, response) {\n                    _.api\n                        .suggest(request.term)\n                        .then(results => response(results));\n                },\n                minLength: 2,\n                select: function(event, ui) {\n                    _.queryText = ui.item.value;\n                }\n            })\n            .data('ui-autocomplete')\n            ._renderItem = function(ul, item) {\n                item.value = item.value.replace(/<\\/?\\w*>/g, \"\");\n\n                return $(\"<li>\")\n                    .attr(\"data-value\", item.value)\n                    .append(item.label)\n                    .appendTo(ul);\n            }\n    }\n}",null,null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}