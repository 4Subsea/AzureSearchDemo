{"version":3,"sources":["app.js","environment.js","main.js","home/home.js","resources/index.js","services/search-api.js","simple/simple.js","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/app.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Home","SearchApi","httpClient","x","withBaseUrl","withParams","withHeader","search","query","post","count","jsonResult","JSON","parse","result","response","resolve","results","description","label","labelmediumimage","style","stylename","brewery","breweries","raw","suggest","suggesterName","highlightPreTag","highlightPostTag","value","console","log","Simple","api","queryText","rawResult","rawJson","stringify","clear","attached","_","$","autocomplete","source","request","term","minLength","select","event","ui","item","data","_renderItem","ul","replace","attr","append","appendTo","inject"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        this.router = router;\n        config.title = 'Azure Search Demo';\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'home/home', title: 'Home' },\n            { route: 'simple', name: 'simple', moduleId: 'simple/simple', title: 'Simple', nav: true }\n        ]);\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Home {\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { HttpClient } from 'aurelia-http-client';\n\nexport class SearchApi {\n\n    constructor() {\n        this.httpClient = new HttpClient()\n            .configure(x => {\n                x.withBaseUrl(\"https://azuresearchfree.search.windows.net/indexes/beersv1/docs\")\n                x.withParams({ \"api-version\": \"2015-02-28\" });\n                x.withHeader(\"api-key\", \"5655AB55C4E55DBE67C691F376482D8C\");\n            })\n    }\n\n    search(query) {\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/search\", {\n                    count: true,\n                    search: query\n                })\n                .then(result => {\n                    let jsonResult = JSON.parse(result.response);\n                    resolve({\n                        count: jsonResult[\"@odata.count\"],\n                        results: jsonResult[\"value\"].map(x => {\n                            return {\n                                name: x.name,\n                                description: x.description,\n                                label: x.labelmediumimage,\n                                style: x.stylename,\n                                brewery: x.breweries[0]\n                            }\n                        }),\n                        raw: jsonResult\n                    });\n                });\n        });\n    }\n\n    suggest(query) {\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/suggest\", {\n                    search: query,\n                    suggesterName: \"suggestBeerName\",\n                    highlightPreTag: \"<b>\",\n                    highlightPostTag: \"</b>\"\n                })\n                .then(result => {\n                    var results = JSON.parse(result.response).value;\n                    console.log(results);\n                    resolve(results.map(x => x[\"@search.text\"]));\n                });\n        })\n    }\n}","import { SearchApi } from 'services/search-api';\n\nexport class Simple {\n    static inject = [SearchApi];\n\n    constructor(api) {\n        this.api = api;\n        this.results = [];\n        this.queryText = '';\n        this.rawResult = '';\n        this.count = null;\n        this.rawJson = '';\n    }\n\n    search() {\n        this.api\n            .search(this.queryText)\n            .then(x => {\n                this.count = x.count;\n                this.results = x.results;\n                this.rawResult = JSON.stringify(x.raw, null, 4);\n            });\n    }\n\n    clear() {\n        this.results = [];\n        this.queryText = '';\n        this.rawResult = '';\n        this.count = null;\n    }\n\n    attached() {\n        let _ = this;\n        $(\".search-input\").autocomplete({\n                source: function(request, response) {\n                    _.api\n                        .suggest(request.term)\n                        .then(results => response(results));\n                },\n                minLength: 2,\n                select: function(event, ui) {\n                    _.queryText = ui.item.value;\n                }\n            })\n            .data('ui-autocomplete')\n            ._renderItem = function(ul, item) {\n                item.value = item.value.replace(/<\\/?\\w*>/g, \"\");\n\n                return $(\"<li>\")\n                    .attr(\"data-value\", item.value)\n                    .append(item.label)\n                    .appendTo(ul);\n            }\n    }\n}",null,null,null,null,null],"sourceRoot":"../src"}