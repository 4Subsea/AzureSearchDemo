{"version":3,"sources":["app.js","environment.js","main.js","common/messages.js","common/multi-subscriber.js","common/request-interceptor.js","common/request-log.js","facets/facets.js","home/home.js","resources/index.js","location/location.js","simple/simple.js","services/search-api.js","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/app.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/site.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/common/request-log.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/common/request-log.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/facets/facets.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/facets/facets.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/home/home.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/location/location.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/location/location.css","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.html","/Users/loctanvo/Projects/AzureSearchDemo/searchapps/src/simple/simple.css"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RequestSent","requestMessage","request","ResponseReceived","responseMessage","response","MultiCollectionSubscriber","bindingEngine","observers","subscriptions","observe","collection","forEach","observer","collectionObserver","x","push","onChanged","execute","subscribe","change","dispose","inject","RequestInterceptor","ea","message","console","log","publish","requestError","error","JSON","parse","responseError","RequestLog","stringify","msg","Facets","api","subscriber","abvFacetMatcher","a","b","from","to","query","results","count","facets","selectedBrewery","selectedStyle","selectedAbv","selectedCreated","search","clear","faceted","buildFilter","result","allFilters","buildBreweryFilter","buildStyleFilter","buildAbvFilter","buildCreatedFilter","reduce","aggregated","current","trim","replace","attached","detached","Date","toString","toISOString","Home","Location","searchApi","queryText","location","markers","radiusLimit","mapSearch","clearMapMarkers","nearest","distance","Math","round","calculateDistance","lat","lng","createMapMarkers","searchWithinMapBoundaries","mapBoundary","getBounds","toJSON","rectangle","topLeft","west","north","bottomLeft","south","bottomRight","east","topRight","withinGeoBoundary","latLng","google","maps","LatLng","marker","Marker","position","animation","Animation","DROP","infowindow","InfoWindow","content","brewery","addListener","open","close","setMap","initializeMap","onMapInitialized","tryRetrieveCurrentLocation","Map","document","getElementById","center","zoom","styles","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","resolve","window","initMap","scriptElement","createElement","src","querySelector","appendChild","lat1","lon1","lat2","lon2","deg2rad","deg","PI","R","dLat","dLon","sin","cos","c","atan2","sqrt","d","Simple","tired","_","$","autocomplete","source","suggest","term","minLength","select","event","ui","item","value","keyup","e","which","hide","data","_renderItem","ul","attr","append","label","appendTo","length","SearchApi","interceptor","httpClient","withBaseUrl","withParams","withHeader","withInterceptor","filter","post","jsonResponse","mapped","stylename","abv","breweries","created","getFullYear","description","alcoholPercentage","labelmediumimage","style","geoDistance","orderby","top","jsonResult","brewerylocation","coordinates","polygon","polygonPoints"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA;;;;;sBACTC,2CAAgBC,QAAQC,QAAQ;AAC5B,iBAAKA,MAAL,GAAcA,MAAd;AACAD,mBAAOE,KAAP,GAAe,mBAAf;AACAF,mBAAOG,GAAP,CAAW,CACP,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuBC,MAAM,MAA7B,EAAqCC,UAAU,WAA/C,EAA4DJ,OAAO,MAAnE,EADO,EAEP,EAAEE,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,eAA7C,EAA8DJ,OAAO,QAArE,EAA+EK,KAAK,IAApF,EAFO,EAGP,EAAEH,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,eAA7C,EAA8DJ,OAAO,SAArE,EAAgFK,KAAK,IAArF,EAHO,EAIP,EAAEH,OAAO,UAAT,EAAqBC,MAAM,UAA3B,EAAuCC,UAAU,mBAAjD,EAAsEJ,OAAO,gBAA7E,EAA+FK,KAAK,IAApG,EAJO,CAAX;AAMH;;;;;;;;;;;oBCVU;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQX,MAAR,CAAe;AACbY,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;QCxBYC,sBAAAA,cACT,qBAAYC,cAAZ,EAA4B;AAAA;;AACxB,aAAKC,OAAL,GAAeD,cAAf;AACH;;QAGQE,2BAAAA,mBACT,0BAAYC,eAAZ,EAA6B;AAAA;;AACzB,aAAKC,QAAL,GAAgBD,eAAhB;AACH;;;;;;;;;;;;;;;;;;QCPQE,oCAAAA;AAGT,2CAAYC,aAAZ,EAA2B;AAAA;;AACvB,iBAAKA,aAAL,GAAqBA,aAArB;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACA,iBAAKC,aAAL,GAAqB,EAArB;AACH;;4CAEDC,2BAAQC,YAAY;AAAA;;AAChBA,uBAAWC,OAAX,CAAmB,aAAK;AACpB,oBAAIC,WAAW,MAAKN,aAAL,CAAmBO,kBAAnB,CAAsCC,CAAtC,CAAf;AACA,sBAAKP,SAAL,CAAeQ,IAAf,CAAoBH,QAApB;AACH,aAHD;;AAKA,mBAAO,IAAP;AACH;;4CAEDI,+BAAUC,SAAS;AAAA;;AACf,iBAAKV,SAAL,CACKI,OADL,CACa;AAAA,uBAAK,OAAKH,aAAL,CAAmBO,IAAnB,CAAwBD,EAAEI,SAAF,CAAY;AAAA,2BAAUD,QAAQE,MAAR,CAAV;AAAA,iBAAZ,CAAxB,CAAL;AAAA,aADb;AAEH;;4CAEDC,6BAAU;AACN,iBAAKZ,aAAL,CAAmBG,OAAnB,CAA2B;AAAA,uBAAKG,EAAEM,OAAF,EAAL;AAAA,aAA3B;AACA,iBAAKb,SAAL,GAAiB,EAAjB;AACH;;;gBAzBMc,SAAS;;;;;;;;;;;;;;;;;;QCAPC,6BAAAA;AAGT,oCAAYC,EAAZ,EAAgB;AAAA;;AACZ,iBAAKA,EAAL,GAAUA,EAAV;AACH;;qCAEDtB,2BAAQuB,SAAS;AACbC,oBAAQC,GAAR,CAAYF,OAAZ;AACA,iBAAKD,EAAL,CAAQI,OAAR,CAAgB,0BAAgBH,OAAhB,CAAhB;AACA,mBAAOA,OAAP;AACH;;qCAEDI,qCAAaC,OAAO;AAChBJ,oBAAQC,GAAR,CAAYG,KAAZ;AACA,kBAAMA,KAAN;AACH;;qCAEDzB,6BAASoB,SAAS;AACdC,oBAAQC,GAAR,CAAYF,OAAZ;AACA,iBAAKD,EAAL,CAAQI,OAAR,CAAgB,+BAAqBG,KAAKC,KAAL,CAAWP,QAAQpB,QAAnB,CAArB,CAAhB;AACA,mBAAOoB,OAAP;AACH;;qCAEDQ,uCAAcH,OAAO;AACjBJ,oBAAQC,GAAR,CAAYG,KAAZ;AACA,kBAAMA,KAAN;AACH;;;gBA1BMR,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDPY,qBAAAA;AAGT,4BAAYV,EAAZ,EAAgB;AAAA;;AAAA;;AACZ,iBAAKA,EAAL,GAAUA,EAAV;AACA,iBAAKtB,OAAL,GAAe,EAAf;AACA,iBAAKG,QAAL,GAAgB,EAAhB;;AAEAmB,eAAGL,SAAH,wBAA0B;AAAA,uBAAO,MAAKjB,OAAL,GAAe6B,KAAKI,SAAL,CAAeC,IAAIlC,OAAnB,EAA4B,IAA5B,EAAkC,CAAlC,CAAtB;AAAA,aAA1B;AACAsB,eAAGL,SAAH,6BAA+B;AAAA,uBAAO,MAAKd,QAAL,GAAgB0B,KAAKI,SAAL,CAAeC,IAAI/B,QAAnB,EAA6B,IAA7B,EAAmC,CAAnC,CAAvB;AAAA,aAA/B;AACH;;;;gCAEe;AACZ,uBAAO,KAAKH,OAAL,IAAgB,KAAKG,QAA5B;AACH;;;;gBAbMiB,SAAS;;;;;;;;;;;;;;;;;;QCAPe,iBAAAA;AAET,wBAAYC,GAAZ,EAAiBC,UAAjB,EAA6B;AAAA;;AAAA;;AAAA,iBAmB7BC,eAnB6B,GAmBX,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,EAAEE,IAAF,KAAWD,EAAEC,IAAb,IAAqBF,EAAEG,EAAF,KAASF,EAAEE,EAA1C;AAAA,aAnBW;;AACzB,iBAAKN,GAAL,GAAWA,GAAX;AACA,iBAAKC,UAAL,GAAkBA,UAAlB;;AAEA,iBAAKM,KAAL,GAAa,EAAb;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKC,MAAL,GAAc,IAAd;;AAEA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,aAAL,GAAqB,EAArB;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,eAAL,GAAuB,EAAvB;;AAEA,iBAAKb,UAAL,CACK7B,OADL,CACa,CAAC,KAAKyC,WAAN,CADb,EAEKlC,SAFL,CAEe;AAAA,uBAAU,MAAKoC,MAAL,EAAV;AAAA,aAFf;AAGH;;yBAIDC,yBAAQ;AACJ,iBAAKT,KAAL,GAAa,EAAb;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKC,MAAL,GAAc,IAAd;;AAEA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,aAAL,GAAqB,EAArB;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,eAAL,GAAuB,EAAvB;;AAEA,iBAAKC,MAAL;AACH;;yBAEDA,2BAAS;AAAA;;AACL,iBAAKf,GAAL,CACKiB,OADL,CACa,KAAKV,KADlB,EACyB,KAAKW,WAAL,EADzB,EAEK1D,IAFL,CAEU,kBAAU;AACZ,uBAAKiD,KAAL,GAAaU,OAAOV,KAApB;AACA,uBAAKD,OAAL,GAAeW,OAAOX,OAAtB;AACA,uBAAKE,MAAL,GAAcS,OAAOT,MAArB;AACH,aANL;AAOH;;yBAEDQ,qCAAc;AACV,gBAAIE,aAAa,CACb,KAAKC,kBAAL,EADa,EAEb,KAAKC,gBAAL,EAFa,EAGb,KAAKC,cAAL,EAHa,EAIb,KAAKC,kBAAL,EAJa,CAAjB;;AAOA,mBAAOJ,WAAWK,MAAX,CAAkB,UAACC,UAAD,EAAaC,OAAb;AAAA,uBAAyBA,UAAUD,qBAAkBC,OAAlB,WAAV,GAA6CD,UAAtE;AAAA,aAAlB,EAAoG,EAApG,EACFE,IADE,GAEFC,OAFE,CAEM,OAFN,EAEe,EAFf,CAAP;AAGH;;yBAEDC,+BAAW;AACP,iBAAKf,MAAL;AACH;;yBAEDgB,+BAAW;AACP,iBAAK9B,UAAL,CAAgBlB,OAAhB;AACH;;yBAEDsC,mDAAqB;AACjB,mBAAO,KAAKV,eAAL,CACFc,MADE,CACK,UAACC,UAAD,EAAaC,OAAb;AAAA,uBAAyBD,4CAAyCC,OAAzC,YAAzB;AAAA,aADL,EACwF,EADxF,EAEFC,IAFE,GAGFC,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP;AAIH;;yBAEDN,2CAAiB;AACb,mBAAO,KAAKV,WAAL,CACFY,MADE,CACK,UAACC,UAAD,EAAaC,OAAb,EAAyB;AAC7B,oBAAItB,OAAOsB,QAAQtB,IAAnB;AACA,oBAAIC,KAAKqB,QAAQrB,EAAjB;;AAEA,oBAAID,QAAQC,EAAZ,EAAgB;AACZ,2BAAOoB,4BAAyBrB,IAAzB,oBAA4CC,EAA5C,UAAP;AACH,iBAFD,MAGK,IAAID,IAAJ,EAAU;AACX,2BAAOqB,4BAAyBrB,IAAzB,UAAP;AACH,iBAFI,MAGA,IAAIC,EAAJ,EAAQ;AACT,2BAAOoB,4BAAyBpB,EAAzB,UAAP;AACH;AAEJ,aAfE,EAeA,EAfA,EAgBFsB,IAhBE,GAiBFC,OAjBE,CAiBM,MAjBN,EAiBc,EAjBd,CAAP;AAkBH;;yBAEDP,+CAAmB;AACf,mBAAO,KAAKV,aAAL,CACFa,MADE,CACK,UAACC,UAAD,EAAaC,OAAb;AAAA,uBAAyBD,mCAAgCC,OAAhC,WAAzB;AAAA,aADL,EAC8E,EAD9E,EAEFC,IAFE,GAGFC,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP;AAIH;;yBAGDL,mDAAqB;AACjB,mBAAO,KAAKV,eAAL,CACFW,MADE,CACK,UAACC,UAAD,EAAaC,OAAb;AAAA,uBAAyBD,gCAA6B,IAAIM,IAAJ,CAASL,QAAQM,QAAR,EAAT,EAA6BC,WAA7B,EAA7B,wBAA0F,IAAIF,IAAJ,CAAS,CAACL,UAAU,CAAX,EAAcM,QAAd,EAAT,EAAmCC,WAAnC,EAA1F,UAAzB;AAAA,aADL,EACgL,EADhL,EAEFN,IAFE,GAGFC,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP;AAIH;;;gBA5GM7C,SAAS;;;;;;;;;;;;;;;MCLPmD,eAAAA;;;;;;;;;;UCAGtF,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCAYiG,mBAAAA;AAGT,0BAAYC,SAAZ,EAAuB;AAAA;;AACnB,iBAAKA,SAAL,GAAiBA,SAAjB;;AAEA,iBAAKC,SAAL,GAAiB,EAAjB;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACA,iBAAK/B,OAAL,GAAe,EAAf;AACA,iBAAKC,KAAL,GAAa,EAAb;AACA,iBAAK+B,OAAL,GAAe,EAAf;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,SAAL,GAAiB,KAAjB;AACH;;2BAED3B,2BAAS;AAAA;;AACL,iBAAK4B,eAAL;;AAEA,iBAAKN,SAAL,CACKO,OADL,CACa,KAAKN,SADlB,EAC6B,KAAKC,QADlC,EAC4C,KAAKE,WADjD,EAEKjF,IAFL,CAEU,aAAK;AACP,sBAAKgD,OAAL,GAAe/B,EAAE+B,OAAF,CAAUlE,GAAV,CAAc,aAAK;AAC9BmC,sBAAEoE,QAAF,GAAaC,KAAKC,KAAL,CAAW,MAAKC,iBAAL,CAAuB,MAAKT,QAAL,CAAcU,GAArC,EAA0C,MAAKV,QAAL,CAAcW,GAAxD,EAA6DzE,EAAEwE,GAA/D,EAAoExE,EAAEyE,GAAtE,CAAX,CAAb;AACA,2BAAOzE,CAAP;AACH,iBAHc,CAAf;AAIA,sBAAKgC,KAAL,GAAahC,EAAEgC,KAAf;;AAEA,sBAAK0C,gBAAL;AACH,aAVL;AAWH;;2BAEDC,iEAA4B;AAAA;;AACxB,iBAAKT,eAAL;;AAEA,gBAAIU,cAAc,KAAK/G,GAAL,CAASgH,SAAT,GAAqBC,MAArB,EAAlB;AACA,gBAAIC,YAAY;AACZC,yBAAYJ,YAAYK,IAAxB,SAAgCL,YAAYM,KADhC;AAEZC,4BAAeP,YAAYK,IAA3B,SAAmCL,YAAYQ,KAFnC;AAGZC,6BAAgBT,YAAYU,IAA5B,SAAoCV,YAAYQ,KAHpC;AAIZG,0BAAaX,YAAYU,IAAzB,SAAiCV,YAAYM;AAJjC,aAAhB;AAMA,iBAAKtB,SAAL,CAAe4B,iBAAf,CAAiC,KAAK3B,SAAtC,EAAiDkB,SAAjD,EACKhG,IADL,CACU,aAAK;AACP,uBAAKgD,OAAL,GAAe/B,EAAE+B,OAAF,CAAUlE,GAAV,CAAc,aAAK;AAC9BmC,sBAAEoE,QAAF,GAAaC,KAAKC,KAAL,CAAW,OAAKC,iBAAL,CAAuB,OAAKT,QAAL,CAAcU,GAArC,EAA0C,OAAKV,QAAL,CAAcW,GAAxD,EAA6DzE,EAAEwE,GAA/D,EAAoExE,EAAEyE,GAAtE,CAAX,CAAb;AACA,2BAAOzE,CAAP;AACH,iBAHc,CAAf;AAIA,uBAAKgC,KAAL,GAAahC,EAAEgC,KAAf;;AAEA,uBAAK0C,gBAAL;AACH,aATL;AAUH;;2BAEDA,+CAAmB;AAAA;;AACf,iBAAK3C,OAAL,CAAalC,OAAb,CAAqB,kBAAU;AAC3B,oBAAI4F,SAAS,IAAIC,OAAOC,IAAP,CAAYC,MAAhB,CAAuBlD,OAAO8B,GAA9B,EAAmC9B,OAAO+B,GAA1C,CAAb;AACA,oBAAIoB,SAAS,IAAIH,OAAOC,IAAP,CAAYG,MAAhB,CAAuB;AAChCC,8BAAUN,MADsB;AAEhC5H,yBAAK,OAAKA,GAFsB;AAGhCmI,+BAAWN,OAAOC,IAAP,CAAYM,SAAZ,CAAsBC;AAHD,iBAAvB,CAAb;;AAMA,uBAAKnC,OAAL,CAAa9D,IAAb,CAAkB4F,MAAlB;;AAEA,oBAAIM,aAAa,IAAIT,OAAOC,IAAP,CAAYS,UAAhB,CAA2B;AACxCC,6BAAS3D,OAAO4D;AADwB,iBAA3B,CAAjB;;AAIAT,uBAAOU,WAAP,CAAmB,WAAnB,EAAgC,YAAW;AACvCJ,+BAAWK,IAAX,CAAgB3I,GAAhB,EAAqBgI,MAArB;AACH,iBAFD;;AAIAA,uBAAOU,WAAP,CAAmB,UAAnB,EAA+B,YAAW;AACtCJ,+BAAWM,KAAX;AACH,iBAFD;AAGH,aArBD;AAsBH;;2BAEDvC,6CAAkB;AACd,iBAAKH,OAAL,CAAalE,OAAb,CAAqB;AAAA,uBAAUgG,OAAOa,MAAP,CAAc,IAAd,CAAV;AAAA,aAArB;AACA,iBAAK3C,OAAL,GAAe,EAAf;AACH;;2BAEDV,+BAAW;AACP,iBAAKsD,aAAL;AACH;;2BAEDC,+CAAmB;AAAA;;AACf,iBAAK9C,QAAL,GAAgB,EAAEU,KAAK,SAAP,EAAkBC,KAAK,SAAvB,EAAhB;AACA,iBAAKoC,0BAAL,GAAkC9H,IAAlC,CAAuC,aAAK;AACxC,uBAAKlB,GAAL,GAAW,IAAI6H,OAAOC,IAAP,CAAYmB,GAAhB,CAAoBC,SAASC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AAC3DC,4BAAQ,OAAKnD,QAD8C;AAE3DoD,0BAAM,CAFqD;AAG3DC,4BAAQ,CAAC,EAAE,eAAe,gBAAjB,EAAmC,eAAe,kBAAlD,EAAsE,WAAW,CAAC,EAAE,SAAS,SAAX,EAAD,CAAjF,EAAD,EAA8G,EAAE,eAAe,WAAjB,EAA8B,eAAe,KAA7C,EAAoD,WAAW,CAAC,EAAE,SAAS,SAAX,EAAD,CAA/D,EAA9G,EAAyM,EAAE,eAAe,KAAjB,EAAwB,eAAe,KAAvC,EAA8C,WAAW,CAAC,EAAE,cAAc,KAAhB,EAAD,CAAzD,EAAzM,EAA+R,EAAE,eAAe,cAAjB,EAAiC,eAAe,eAAhD,EAAiE,WAAW,CAAC,EAAE,cAAc,IAAhB,EAAD,CAA5E,EAA/R,EAAuY,EAAE,eAAe,MAAjB,EAAyB,eAAe,KAAxC,EAA+C,WAAW,CAAC,EAAE,cAAc,CAAC,GAAjB,EAAD,EAAyB,EAAE,aAAa,EAAf,EAAzB,CAA1D,EAAvY,EAAkf,EAAE,eAAe,cAAjB,EAAiC,eAAe,KAAhD,EAAuD,WAAW,CAAC,EAAE,cAAc,YAAhB,EAAD,CAAlE,EAAlf,EAAwlB,EAAE,eAAe,eAAjB,EAAkC,eAAe,aAAjD,EAAgE,WAAW,CAAC,EAAE,cAAc,KAAhB,EAAD,CAA3E,EAAxlB,EAAgsB,EAAE,eAAe,SAAjB,EAA4B,eAAe,KAA3C,EAAkD,WAAW,CAAC,EAAE,cAAc,KAAhB,EAAD,CAA7D,EAAhsB,EAA0xB,EAAE,eAAe,OAAjB,EAA0B,eAAe,KAAzC,EAAgD,WAAW,CAAC,EAAE,SAAS,SAAX,EAAD,EAAyB,EAAE,cAAc,IAAhB,EAAzB,CAA3D,EAA1xB;AAHmD,iBAApD,CAAX;;AAMA,uBAAKtJ,GAAL,CAAS0I,WAAT,CAAqB,MAArB,EAA6B,YAAM;AAC/B,wBAAI,OAAKtC,SAAL,KAAmB,IAAvB,EAA6B;AACzB,+BAAKU,yBAAL;AACH;AACJ,iBAJD;;AAMA,uBAAKrC,MAAL;AACH,aAdD;AAgBH;;2BAEDuE,mEAA6B;AAAA;;AACzB,mBAAO,IAAIxI,OAAJ,CAAY,mBAAW;AAC1B,oBAAI+I,UAAUC,WAAd,EAA2B;AACvBD,8BAAUC,WAAV,CAAsBC,kBAAtB,CAAyC,oBAAY;AACjD,+BAAKxD,QAAL,GAAgB,EAAEU,KAAKuB,SAASwB,MAAT,CAAgBC,QAAvB,EAAiC/C,KAAKsB,SAASwB,MAAT,CAAgBE,SAAtD,EAAhB;AACA9G,gCAAQC,GAAR,CAAY,6BAAZ;AACAD,gCAAQC,GAAR,CAAY,OAAKkD,QAAjB;;AAEA4D;AACH,qBAND,EAMG;AAAA,+BAASA,SAAT;AAAA,qBANH;AAOH,iBARD,MAQO;AACHA;AACH;AACJ,aAZM,CAAP;AAeH;;2BAEDf,yCAAgB;AAAA;;AACZgB,mBAAOC,OAAP,GAAiB;AAAA,uBAAM,OAAKhB,gBAAL,EAAN;AAAA,aAAjB;AACA,gBAAIiB,gBAAgBd,SAASe,aAAT,CAAuB,QAAvB,CAApB;AACAD,0BAAcE,GAAd,GAAoB,sGAApB;AACAhB,qBAASiB,aAAT,CAAuB,MAAvB,EAA+BC,WAA/B,CAA2CJ,aAA3C;AACH;;2BAEDtD,+CAAkB2D,MAAMC,MAAMC,MAAMC,MAAM;AACtC,qBAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,uBAAOA,OAAOlE,KAAKmE,EAAL,GAAU,GAAjB,CAAP;AACH;;AAED,gBAAIC,IAAI,IAAR;AACA,gBAAIC,OAAOJ,QAAQF,OAAOF,IAAf,CAAX;AACA,gBAAIS,OAAOL,QAAQD,OAAOF,IAAf,CAAX;AACA,gBAAIzG,IACA2C,KAAKuE,GAAL,CAASF,OAAO,CAAhB,IAAqBrE,KAAKuE,GAAL,CAASF,OAAO,CAAhB,CAArB,GACArE,KAAKwE,GAAL,CAASP,QAAQJ,IAAR,CAAT,IAA0B7D,KAAKwE,GAAL,CAASP,QAAQF,IAAR,CAAT,CAA1B,GACA/D,KAAKuE,GAAL,CAASD,OAAO,CAAhB,CADA,GACqBtE,KAAKuE,GAAL,CAASD,OAAO,CAAhB,CAHzB;AAKA,gBAAIG,IAAI,IAAIzE,KAAK0E,KAAL,CAAW1E,KAAK2E,IAAL,CAAUtH,CAAV,CAAX,EAAyB2C,KAAK2E,IAAL,CAAU,IAAItH,CAAd,CAAzB,CAAZ;AACA,gBAAIuH,IAAIR,IAAIK,CAAZ;AACA,mBAAOG,CAAP;AACH;;;gBAnJM1I,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDP2I,iBAAAA;AAGT,wBAAY3H,GAAZ,EAAiB;AAAA;;AACb,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKQ,OAAL,GAAe,EAAf;AACA,iBAAK8B,SAAL,GAAiB,EAAjB;AACA,iBAAK7B,KAAL,GAAa,IAAb;AACH;;yBAMDM,2BAAS;AAAA;;AACL,iBAAKf,GAAL,CACKe,MADL,CACY,KAAKuB,SADjB,EAEK9E,IAFL,CAEU,aAAK;AACP4B,wBAAQC,GAAR,CAAYZ,CAAZ;AACA,sBAAKgC,KAAL,GAAahC,EAAEgC,KAAf;AACA,sBAAKD,OAAL,GAAe/B,EAAE+B,OAAjB;AACH,aANL;AAOH;;yBAEDoH,yBAAQ;AACJ,iBAAKtF,SAAL,GAAiB,eAAjB;AACA,iBAAKvB,MAAL;AACH;;yBAEDe,+BAAW;AACP,gBAAI+F,IAAI,IAAR;AACAC,cAAE,eAAF,EAAmBC,YAAnB,CAAgC;AAC5BC,wBAAQ,gBAAUpK,OAAV,EAAmBG,QAAnB,EAA6B;AACjC8J,sBAAE7H,GAAF,CACKiI,OADL,CACarK,QAAQsK,IADrB,EAEK1K,IAFL,CAEU;AAAA,+BAAWO,SAASyC,OAAT,CAAX;AAAA,qBAFV;AAGH,iBAL2B;AAM5B2H,2BAAW,CANiB;AAO5BC,wBAAQ,gBAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AACzBT,sBAAEvF,SAAF,GAAcgG,GAAGC,IAAH,CAAQC,KAAtB;AACH;AAT2B,aAAhC,EAWKC,KAXL,CAWW,UAAUC,CAAV,EAAa;AAChB,oBAAIA,EAAEC,KAAF,KAAY,EAAhB,EAAoB;AAChBb,sBAAE,kBAAF,EAAsBc,IAAtB;AACH;AACJ,aAfL,EAgBKC,IAhBL,CAgBU,iBAhBV,EAiBKC,WAjBL,GAiBmB,UAAUC,EAAV,EAAcR,IAAd,EAAoB;AAC/BA,qBAAKC,KAAL,GAAaD,KAAKC,KAAL,CAAW3G,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAb;;AAEA,uBAAOiG,EAAE,MAAF,EACFkB,IADE,CACG,YADH,EACiBT,KAAKC,KADtB,EAEFS,MAFE,CAEKV,KAAKW,KAFV,EAGFC,QAHE,CAGOJ,EAHP,CAAP;AAIH,aAxBL;AAyBH;;;;gCA9CgB;AACb,uBAAO,KAAKvI,OAAL,CAAa4I,MAAb,GAAsB,CAA7B;AACH;;;;gBAXMpK,SAAS;;;;;;;;;;;;;;;;;;QCAPqK,oBAAAA;AAGT,2BAAYC,WAAZ,EAAyB;AAAA;;AACrB,iBAAKC,UAAL,GAAkB,oCACb1M,SADa,CACH,aAAK;AACZ4B,kBAAE+K,WAAF,CAAc,iEAAd;AACA/K,kBAAEgL,UAAF,CAAa,EAAE,eAAe,YAAjB,EAAb;AACAhL,kBAAEiL,UAAF,CAAa,SAAb,EAAwB,kCAAxB;AACAjL,kBAAEkL,eAAF,CAAkBL,WAAlB;AACH,aANa,CAAlB;AAOH;;4BAEDrI,2BAAQV,OAAOqJ,QAAQ;AAAA;;AAWnB,mBAAO,IAAI9M,OAAJ,CAAY,mBAAW;AAC1B,sBAAKyM,UAAL,CACKM,IADL,CACU,SADV,EACqB;AACbnJ,4BAAQ,CACJ,WADI,EAEJ,oBAFI,EAGJ,WAHI,EAIJ,uBAJI,CADK;AAObK,4BAAQR,KAPK;AAQbqJ,4BAAQA,MARK;AASbnJ,2BAAO;AATM,iBADrB,EAYKjD,IAZL,CAYU,kBAAU;AACZ,wBAAIsM,eAAerK,KAAKC,KAAL,CAAWyB,OAAOpD,QAAlB,CAAnB;AACA,wBAAI2C,SAASoJ,aAAa,gBAAb,CAAb;AACA,wBAAIC,SAAS;AACTrJ,gCAAQ;AACJsJ,uCAAWtJ,OAAOsJ,SADd;AAEJC,iCAAKvJ,OAAOuJ,GAFR;AAGJC,uCAAWxJ,OAAOwJ,SAHd;AAIJC,qCAASzJ,OAAOyJ,OAAP,CAAe7N,GAAf,CAAmB,aAAK;AAC7B,uCAAO;AACHkM,2CAAO,IAAIxG,IAAJ,CAASvD,EAAE+J,KAAX,EAAkB4B,WAAlB,EADJ;AAEH3J,2CAAOhC,EAAEgC;AAFN,iCAAP;AAIH,6BALQ;AAJL,yBADC;AAYTD,iCAASsJ,aAAatB,KAAb,CAAmBlM,GAAnB,CAAuB,aAAK;AACjC,mCAAO;AACHE,sCAAMiC,EAAEjC,IADL;AAEH6N,6CAAa5L,EAAE4L,WAFZ;AAGHC,mDAAmB7L,EAAEwL,GAHlB;AAIHf,uCAAOzK,EAAE8L,gBAJN;AAKHC,uCAAO/L,EAAEuL,SALN;AAMHjF,yCAAStG,EAAEyL,SAAF,CAAY,CAAZ;AANN,6BAAP;AAQH,yBATQ,CAZA;AAsBTzJ,+BAAOqJ,aAAa,cAAb;AAtBE,qBAAb;;AAyBA3D,4BAAQ4D,MAAR;AACH,iBAzCL;AA0CH,aA3CM,CAAP;AA4CH;;4BAEDnH,2BAAQrC,OAAOgC,UAAUE,aAAa;AAAA;;AAClC,gBAAIgI,iEAA+DlI,SAASW,GAAxE,SAA+EX,SAASU,GAAxF,QAAJ;AACA,gBAAI2G,SAAS,2BAAb;;AAEA,gBAAInH,WAAJ,EAAiB;AACbmH,qCAAmBa,WAAnB,YAAqChI,WAArC;AACH;;AAED,mBAAO,IAAI3F,OAAJ,CAAY,mBAAW;AAC1B,uBAAKyM,UAAL,CACKM,IADL,CACU,SADV,EACqB;AACbpJ,2BAAO,IADM;AAEbM,4BAAQR,KAFK;AAGbqJ,4BAAQA,MAHK;AAIbc,6BAASD,WAJI;AAKbE,yBAAK;AALQ,iBADrB,EAQKnN,IARL,CAQU,kBAAU;AACZ,wBAAIoN,aAAanL,KAAKC,KAAL,CAAWyB,OAAOpD,QAAlB,CAAjB;AACAoI,4BAAQ;AACJ1F,+BAAOmK,WAAW,cAAX,CADH;AAEJpK,iCAASoK,WAAW,OAAX,EAAoBtO,GAApB,CAAwB,aAAK;AAClC,mCAAO;AACHE,sCAAMiC,EAAEjC,IADL;AAEH0M,uCAAOzK,EAAE8L,gBAFN;AAGHC,uCAAO/L,EAAEuL,SAHN;AAIHM,mDAAmB7L,EAAEwL,GAJlB;AAKHlF,yCAAStG,EAAEyL,SAAF,CAAY,CAAZ,CALN;AAMHhH,qCAAKzE,EAAEoM,eAAF,CAAkBC,WAAlB,CAA8B,CAA9B,CANF;AAOH7H,qCAAKxE,EAAEoM,eAAF,CAAkBC,WAAlB,CAA8B,CAA9B;AAPF,6BAAP;AASH,yBAVQ;AAFL,qBAAR;AAcH,iBAxBL;AAyBH,aA1BM,CAAP;AA2BH;;4BAED7G,+CAAkB3B,WAAWyI,SAAS;AAAA;;AAClC,gBAAIC,gBAAmBD,QAAQtH,OAA3B,UAAuCsH,QAAQnH,UAA/C,UAA8DmH,QAAQjH,WAAtE,UAAsFiH,QAAQ/G,QAA9F,UAA2G+G,QAAQtH,OAAvH;;AAEA,mBAAO,IAAI3G,OAAJ,CAAY,mBAAW;AAC1B,uBAAKyM,UAAL,CACKM,IADL,CACU,SADV,EACqB;AACbpJ,2BAAO,IADM;AAEbM,4BAAQuB,SAFK;AAGbqI,yBAAK,IAHQ;AAIbf,oFAA8DoB,aAA9D;AAJa,iBADrB,EAOKxN,IAPL,CAOU,kBAAU;AACZ,wBAAIoN,aAAanL,KAAKC,KAAL,CAAWyB,OAAOpD,QAAlB,CAAjB;AACAoI,4BAAQ;AACJ1F,+BAAOmK,WAAW,cAAX,CADH;AAEJpK,iCAASoK,WAAW,OAAX,EAAoBtO,GAApB,CAAwB,aAAK;AAClC,mCAAO;AACHE,sCAAMiC,EAAEjC,IADL;AAEH0M,uCAAOzK,EAAE8L,gBAFN;AAGHC,uCAAO/L,EAAEuL,SAHN;AAIHM,mDAAmB7L,EAAEwL,GAJlB;AAKHlF,yCAAStG,EAAEyL,SAAF,CAAY,CAAZ,CALN;AAMHhH,qCAAKzE,EAAEoM,eAAF,CAAkBC,WAAlB,CAA8B,CAA9B,CANF;AAOH7H,qCAAKxE,EAAEoM,eAAF,CAAkBC,WAAlB,CAA8B,CAA9B;AAPF,6BAAP;AASH,yBAVQ;AAFL,qBAAR;AAcH,iBAvBL;AAwBH,aAzBM,CAAP;AA0BH;;;gBAvIM9L,SAAS;;ACJpB;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        this.router = router;\n        config.title = 'Azure Search Demo';\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'home/home', title: 'Home' },\n            { route: 'simple', name: 'simple', moduleId: 'simple/simple', title: 'Simple', nav: true },\n            { route: 'facets', name: 'facets', moduleId: 'facets/facets', title: 'Faceted', nav: true },\n            { route: 'location', name: 'location', moduleId: 'location/location', title: 'Location based', nav: true }\n        ]);\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class RequestSent {\n    constructor(requestMessage) {\n        this.request = requestMessage;\n    }\n}\n\nexport class ResponseReceived {\n    constructor(responseMessage) {\n        this.response = responseMessage;\n    }\n}","import { BindingEngine } from \"aurelia-binding\";\n\nexport class MultiCollectionSubscriber {\n    static inject = [BindingEngine];\n\n    constructor(bindingEngine) {\n        this.bindingEngine = bindingEngine;\n        this.observers = []\n        this.subscriptions = [];\n    }\n\n    observe(collection) {\n        collection.forEach(x => {\n            let observer = this.bindingEngine.collectionObserver(x);\n            this.observers.push(observer)\n        });\n\n        return this;\n    }\n\n    onChanged(execute) {\n        this.observers\n            .forEach(x => this.subscriptions.push(x.subscribe(change => execute(change))));\n    }\n\n    dispose() {\n        this.subscriptions.forEach(x => x.dispose());\n        this.observers = [];\n    }\n}","import { EventAggregator } from \"aurelia-event-aggregator\";\nimport { RequestSent, ResponseReceived } from \"./messages\";\n\nexport class RequestInterceptor {\n    static inject = [EventAggregator]\n\n    constructor(ea) {\n        this.ea = ea;\n    }\n\n    request(message) {\n        console.log(message);\n        this.ea.publish(new RequestSent(message));\n        return message;\n    }\n\n    requestError(error) {\n        console.log(error);\n        throw error;\n    }\n\n    response(message) {\n        console.log(message);\n        this.ea.publish(new ResponseReceived(JSON.parse(message.response)));\n        return message;\n    }\n\n    responseError(error) {\n        console.log(error);\n        throw error;\n    }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { RequestSent, ResponseReceived } from './messages';\n\nexport class RequestLog {\n    static inject = [EventAggregator];\n\n    constructor(ea) {\n        this.ea = ea;\n        this.request = '';\n        this.response = '';\n\n        ea.subscribe(RequestSent, msg => this.request = JSON.stringify(msg.request, null, 4));\n        ea.subscribe(ResponseReceived, msg => this.response = JSON.stringify(msg.response, null, 4));\n    }\n\n    get hasValues() {\n        return this.request || this.response;\n    }\n\n}","import { SearchApi } from \"services/search-api\";\nimport { MultiCollectionSubscriber } from \"common/multi-subscriber\";\n\n\nexport class Facets {\n    static inject = [SearchApi, MultiCollectionSubscriber];\n    constructor(api, subscriber) {\n        this.api = api;\n        this.subscriber = subscriber;\n\n        this.query = \"\";\n        this.results = [];\n        this.count = null;\n        this.facets = null;\n\n        this.selectedBrewery = [];\n        this.selectedStyle = [];\n        this.selectedAbv = [];\n        this.selectedCreated = [];\n\n        this.subscriber\n            .observe([this.selectedAbv])\n            .onChanged(change => this.search());\n    }\n\n    abvFacetMatcher = (a, b) => a.from === b.from && a.to === b.to;\n\n    clear() {\n        this.query = \"\";\n        this.results = [];\n        this.count = null;\n        this.facets = null;\n\n        this.selectedBrewery = [];\n        this.selectedStyle = [];\n        this.selectedAbv = [];\n        this.selectedCreated = [];\n\n        this.search();\n    }\n\n    search() {\n        this.api\n            .faceted(this.query, this.buildFilter())\n            .then(result => {\n                this.count = result.count;\n                this.results = result.results;\n                this.facets = result.facets;\n            })\n    }\n\n    buildFilter() {\n        var allFilters = [\n            this.buildBreweryFilter(),\n            this.buildStyleFilter(),\n            this.buildAbvFilter(),\n            this.buildCreatedFilter()\n        ];\n\n        return allFilters.reduce((aggregated, current) => current ? aggregated + ` (${current}) and` : aggregated, \"\")\n            .trim()\n            .replace(/ and$/, \"\");\n    }\n\n    attached() {\n        this.search();\n    }\n\n    detached() {\n        this.subscriber.dispose();\n    }\n\n    buildBreweryFilter() {\n        return this.selectedBrewery\n            .reduce((aggregated, current) => aggregated + ` (breweries/any(t: t eq '${current}')) or`, \"\")\n            .trim()\n            .replace(/ or$/, \"\");\n    }\n\n    buildAbvFilter() {\n        return this.selectedAbv\n            .reduce((aggregated, current) => {\n                var from = current.from;\n                var to = current.to;\n\n                if (from && to) {\n                    return aggregated + ` (abv ge ${from} and abv lt ${to}) or`;\n                }\n                else if (from) {\n                    return aggregated + ` (abv ge ${from}) or`;\n                }\n                else if (to) {\n                    return aggregated + ` (abv lt ${to}) or`\n                }\n\n            }, \"\")\n            .trim()\n            .replace(/ or$/, \"\");\n    }\n\n    buildStyleFilter() {\n        return this.selectedStyle\n            .reduce((aggregated, current) => aggregated + ` (stylename eq '${current}') or`, \"\")\n            .trim()\n            .replace(/ or$/, \"\");\n    }\n\n\n    buildCreatedFilter() {\n        return this.selectedCreated\n            .reduce((aggregated, current) => aggregated + ` (created ge ${new Date(current.toString()).toISOString()} and created lt ${new Date((current + 1).toString()).toISOString()}) or`, \"\")\n            .trim()\n            .replace(/ or$/, \"\");\n    }\n}","export class Home {\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { SearchApi } from \"services/search-api\";\n\nexport class Location {\n    static inject = [SearchApi];\n\n    constructor(searchApi) {\n        this.searchApi = searchApi;\n\n        this.queryText = \"\";\n        this.location = {};\n        this.results = []\n        this.count = \"\";\n        this.markers = [];\n        this.radiusLimit = \"\";\n        this.mapSearch = false;\n    }\n\n    search() {\n        this.clearMapMarkers();\n\n        this.searchApi\n            .nearest(this.queryText, this.location, this.radiusLimit)\n            .then(x => {\n                this.results = x.results.map(x => {\n                    x.distance = Math.round(this.calculateDistance(this.location.lat, this.location.lng, x.lat, x.lng));\n                    return x;\n                });\n                this.count = x.count;\n\n                this.createMapMarkers();\n            });\n    }\n\n    searchWithinMapBoundaries() {\n        this.clearMapMarkers();\n\n        let mapBoundary = this.map.getBounds().toJSON();\n        let rectangle = {\n            topLeft: `${mapBoundary.west} ${mapBoundary.north}`,\n            bottomLeft: `${mapBoundary.west} ${mapBoundary.south}`,\n            bottomRight: `${mapBoundary.east} ${mapBoundary.south}`,\n            topRight: `${mapBoundary.east} ${mapBoundary.north}`\n        }\n        this.searchApi.withinGeoBoundary(this.queryText, rectangle)\n            .then(x => {\n                this.results = x.results.map(x => {\n                    x.distance = Math.round(this.calculateDistance(this.location.lat, this.location.lng, x.lat, x.lng));\n                    return x;\n                });\n                this.count = x.count;\n\n                this.createMapMarkers();\n            });\n    }\n\n    createMapMarkers() {\n        this.results.forEach(result => {\n            var latLng = new google.maps.LatLng(result.lat, result.lng);\n            var marker = new google.maps.Marker({\n                position: latLng,\n                map: this.map,\n                animation: google.maps.Animation.DROP\n            });\n\n            this.markers.push(marker);\n\n            var infowindow = new google.maps.InfoWindow({\n                content: result.brewery\n            });\n\n            marker.addListener('mouseover', function() {\n                infowindow.open(map, marker);\n            });\n\n            marker.addListener('mouseout', function() {\n                infowindow.close();\n            });\n        });\n    }\n\n    clearMapMarkers() {\n        this.markers.forEach(marker => marker.setMap(null));\n        this.markers = [];\n    }\n\n    attached() {\n        this.initializeMap();\n    }\n\n    onMapInitialized() {\n        this.location = { lat: 59.917081, lng: 10.727702 };\n        this.tryRetrieveCurrentLocation().then(x => {\n            this.map = new google.maps.Map(document.getElementById('map'), {\n                center: this.location,\n                zoom: 6,\n                styles: [{ \"featureType\": \"administrative\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#444444\" }] }, { \"featureType\": \"landscape\", \"elementType\": \"all\", \"stylers\": [{ \"color\": \"#f2f2f2\" }] }, { \"featureType\": \"poi\", \"elementType\": \"all\", \"stylers\": [{ \"visibility\": \"off\" }] }, { \"featureType\": \"poi.business\", \"elementType\": \"geometry.fill\", \"stylers\": [{ \"visibility\": \"on\" }] }, { \"featureType\": \"road\", \"elementType\": \"all\", \"stylers\": [{ \"saturation\": -100 }, { \"lightness\": 45 }] }, { \"featureType\": \"road.highway\", \"elementType\": \"all\", \"stylers\": [{ \"visibility\": \"simplified\" }] }, { \"featureType\": \"road.arterial\", \"elementType\": \"labels.icon\", \"stylers\": [{ \"visibility\": \"off\" }] }, { \"featureType\": \"transit\", \"elementType\": \"all\", \"stylers\": [{ \"visibility\": \"off\" }] }, { \"featureType\": \"water\", \"elementType\": \"all\", \"stylers\": [{ \"color\": \"#b4d4e1\" }, { \"visibility\": \"on\" }] }]\n            });\n\n            this.map.addListener('idle', () => {\n                if (this.mapSearch === true) {\n                    this.searchWithinMapBoundaries();\n                }\n            });\n\n            this.search();\n        });\n\n    }\n\n    tryRetrieveCurrentLocation() {\n        return new Promise(resolve => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.location = { lat: position.coords.latitude, lng: position.coords.longitude };\n                    console.log(\"Successfully found position\");\n                    console.log(this.location);\n\n                    resolve();\n                }, error => resolve());\n            } else {\n                resolve();\n            }\n        });\n\n\n    }\n\n    initializeMap() {\n        window.initMap = () => this.onMapInitialized();\n        let scriptElement = document.createElement('script');\n        scriptElement.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCpc-ixRTVtC3qx-55OvECcX01bEw9siCA&callback=initMap\";\n        document.querySelector('body').appendChild(scriptElement);\n    }\n\n    calculateDistance(lat1, lon1, lat2, lon2) {\n        function deg2rad(deg) {\n            return deg * (Math.PI / 180)\n        }\n\n        let R = 6371; // Radius of the earth in km\n        let dLat = deg2rad(lat2 - lat1);  // deg2rad below\n        let dLon = deg2rad(lon2 - lon1);\n        let a =\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2)\n            ;\n        let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        let d = R * c; // Distance in km\n        return d;\n    }\n}","import { SearchApi } from 'services/search-api';\n\nexport class Simple {\n    static inject = [SearchApi];\n\n    constructor(api) {\n        this.api = api;\n        this.results = [];\n        this.queryText = '';\n        this.count = null;\n    }\n\n    get hasResults() {\n        return this.results.length > 0;\n    }\n\n    search() {\n        this.api\n            .search(this.queryText)\n            .then(x => {\n                console.log(x);\n                this.count = x.count;\n                this.results = x.results;\n            });\n    }\n\n    tired() {\n        this.queryText = \"\\\"real kick\\\"\";\n        this.search();\n    }\n\n    attached() {\n        let _ = this;\n        $(\".search-input\").autocomplete({\n            source: function (request, response) {\n                _.api\n                    .suggest(request.term)\n                    .then(results => response(results));\n            },\n            minLength: 2,\n            select: function (event, ui) {\n                _.queryText = ui.item.value;\n            }\n        })\n            .keyup(function (e) {\n                if (e.which === 13) {\n                    $(\".ui-autocomplete\").hide();\n                }\n            })\n            .data('ui-autocomplete')\n            ._renderItem = function (ul, item) {\n                item.value = item.value.replace(/<\\/?\\w*>/g, \"\");\n\n                return $(\"<li>\")\n                    .attr(\"data-value\", item.value)\n                    .append(item.label)\n                    .appendTo(ul);\n            }\n    }\n}","import { HttpClient } from \"aurelia-http-client\";\nimport { RequestInterceptor } from \"../common/request-interceptor\";\n\nexport class SearchApi {\n    static inject = [RequestInterceptor];\n\n    constructor(interceptor) {\n        this.httpClient = new HttpClient()\n            .configure(x => {\n                x.withBaseUrl(\"https://azuresearchfree.search.windows.net/indexes/beersv1/docs\")\n                x.withParams({ \"api-version\": \"2015-02-28\" });\n                x.withHeader(\"api-key\", \"5655AB55C4E55DBE67C691F376482D8C\");\n                x.withInterceptor(interceptor)\n            })\n    }\n\n    faceted(query, filter) {\n        // return new Promise(resolve => {\n        //     var mapped = {\n        //         facets: null,\n        //         results: [],\n        //         count: 0,\n        //     };\n        //     resolve(mapped)\n        // });\n\n\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/search\", {\n                    facets: [\n                        \"stylename\",\n                        \"abv,values:5|10|15\",\n                        \"breweries\",\n                        \"created,interval:year\"\n                    ],\n                    search: query,\n                    filter: filter,\n                    count: true\n                })\n                .then(result => {\n                    var jsonResponse = JSON.parse(result.response);\n                    var facets = jsonResponse[\"@search.facets\"];\n                    var mapped = {\n                        facets: {\n                            stylename: facets.stylename,\n                            abv: facets.abv,\n                            breweries: facets.breweries,\n                            created: facets.created.map(x => {\n                                return {\n                                    value: new Date(x.value).getFullYear(),\n                                    count: x.count\n                                }\n                            }),\n                        },\n                        results: jsonResponse.value.map(x => {\n                            return {\n                                name: x.name,\n                                description: x.description,\n                                alcoholPercentage: x.abv,\n                                label: x.labelmediumimage,\n                                style: x.stylename,\n                                brewery: x.breweries[0]\n                            }\n                        }),\n                        count: jsonResponse[\"@odata.count\"],\n                    }\n\n                    resolve(mapped);\n                });\n        })\n    }\n\n    nearest(query, location, radiusLimit) {\n        let geoDistance = `geo.distance(brewerylocation, geography'POINT(${location.lng} ${location.lat})')`;\n        let filter = \"(brewerylocation ne null)\";\n\n        if (radiusLimit) {\n            filter += ` and (${geoDistance} le ${radiusLimit})`;\n        }\n\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/search\", {\n                    count: true,\n                    search: query,\n                    filter: filter,\n                    orderby: geoDistance,\n                    top: 100\n                })\n                .then(result => {\n                    let jsonResult = JSON.parse(result.response);\n                    resolve({\n                        count: jsonResult[\"@odata.count\"],\n                        results: jsonResult[\"value\"].map(x => {\n                            return {\n                                name: x.name,\n                                label: x.labelmediumimage,\n                                style: x.stylename,\n                                alcoholPercentage: x.abv,\n                                brewery: x.breweries[0],\n                                lng: x.brewerylocation.coordinates[0],\n                                lat: x.brewerylocation.coordinates[1]\n                            }\n                        })\n                    });\n                });\n        });\n    }\n\n    withinGeoBoundary(queryText, polygon) {\n        let polygonPoints = `${polygon.topLeft}, ${polygon.bottomLeft}, ${polygon.bottomRight}, ${polygon.topRight}, ${polygon.topLeft}`;\n\n        return new Promise(resolve => {\n            this.httpClient\n                .post(\"/search\", {\n                    count: true,\n                    search: queryText,\n                    top: 1000,\n                    filter: `geo.intersects(brewerylocation, geography'POLYGON((${polygonPoints}))')`\n                })\n                .then(result => {\n                    let jsonResult = JSON.parse(result.response);\n                    resolve({\n                        count: jsonResult[\"@odata.count\"],\n                        results: jsonResult[\"value\"].map(x => {\n                            return {\n                                name: x.name,\n                                label: x.labelmediumimage,\n                                style: x.stylename,\n                                alcoholPercentage: x.abv,\n                                brewery: x.breweries[0],\n                                lng: x.brewerylocation.coordinates[0],\n                                lat: x.brewerylocation.coordinates[1]\n                            }\n                        })\n                    });\n                });\n        });\n    }\n}",null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}